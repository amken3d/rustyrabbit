import { Button, VerticalBox, HorizontalBox, SpinBox, ComboBox, LineEdit } from "std-widgets.slint";

export global Callbacks {
    callback calib_click(int,int, int, string, string);
}



    export component CalibrationViewPort {
    in-out property<int> selected_calibration <=> r.current-index; // Use int to represent calibration type
    in-out property<int> grid_rows <=> s1.value;  // Accessible globally
    in-out property<int> grid_cols <=> s2.value; // Accessible globally
    in-out property<string> loc_x <=> s3.text;  // Accessible globally
    in-out property<string> loc_y <=> s4.text;  // Accessible globally
    callback calib_click(int,int, int, string, string);





    VerticalLayout {
        spacing: 10px;
        padding: 10px;

        Text { text: "Select Calibration Type:"; font-size: 18px; }

        r := ComboBox {
            padding-left: 5px;
            width: self.preferred-width * 2;
            height: self.preferred-height * 2;
            model: ["Chess Board", "Circle Grid", "Rabbit P&P Aruco"];
            current-index: 0;
        }

        Rectangle {
            padding: 10px;
         VerticalLayout {
                spacing: 10px;


                // Control visibility of components based on conditions
//                if (r.current-index == 0 || r.current-index == 1) :
                Text { vertical-alignment: center; text: "Number of Rows"; }
                s1 := SpinBox { in-out property<int> grid_rows; width: 150px; value: grid_rows; }
//                if (r.current-index == 0 || r.current-index == 1) :
                Text { vertical-alignment: center; text: "Number of Columns"; }
                s2 := SpinBox { in-out property<int> grid_cols; width: 150px; value: grid_cols; }
//                if r.current-index == 2 : s3{loc_x <=> root.loc_x;}
                Text { vertical-alignment: center; text: "Location X:"; }
                s3 := LineEdit { in-out property<string> loc_x;font-size: 14px; width: 150px; placeholder-text: "Enter X coordinate"; text: loc_x; }
//                if r.current-index == 2 : s4{loc_y <=> root.loc_y;}
                Text { vertical-alignment: center; text: "Location Y:"; }
                s4 := LineEdit { in-out property<string> loc_y;font-size: 14px; width: 150px; placeholder-text: "Enter X coordinate"; text: loc_y; }
                }
            }
        Button {
            text: "Start Calibration";
            clicked => {
                calib_click(selected_calibration,grid_rows, grid_cols, loc_x, loc_y);
            }
        }
    }
}
